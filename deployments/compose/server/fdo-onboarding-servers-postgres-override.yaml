services:
  manufacturer:
    command:
     - --debug
     - manufacturing
     - --config=${container_working_dir:-/workdir}/configs/manufacturing.yaml
    depends_on:
      manufacturer-db:
        condition: service_healthy

  manufacturer-db:
    container_name: manufacturer-db
    hostname: manufacturer-db
    image: postgres:alpine
    restart: always
    # set shared memory limit when using docker compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_DB: manufacturer
      POSTGRES_USER: manufacturer
      POSTGRES_PASSWORD: Passw0rd
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - fdo

  rendezvous:
    command:
      - --debug
      - rendezvous
      - --config=${container_working_dir:-/workdir}/configs/rendezvous.yaml
    depends_on:
      rendezvous-db:
        condition: service_healthy

  rendezvous-db:
    container_name: rendezvous-db
    hostname: rendezvous-db
    image: postgres:alpine
    restart: always
    # set shared memory limit when using docker compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_DB: rendezvous
      POSTGRES_USER: rendezvous
      POSTGRES_PASSWORD: Passw0rd
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - fdo

  owner:
    command:
      - --debug
      - owner
      - --config=${container_working_dir:-/workdir}/configs/owner.yaml
    depends_on:
      owner-db:
        condition: service_healthy

  owner-db:
    container_name: owner-db
    hostname: owner-db
    image: postgres:alpine
    restart: always
    # set shared memory limit when using docker compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_DB: owner
      POSTGRES_USER: owner
      POSTGRES_PASSWORD: Passw0rd
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - fdo


